#!/usr/bin/env python3.3

import argparse
from desk_changer.daemon import __version__ as desk_changer_version, Daemon
import logging
import os.path
import sys

desk_changer_logger = logging.getLogger('desk-changer-daemon')

parser = argparse.ArgumentParser(description='DeskChanger Daemon')
parser.add_argument('-d', '--daemonize', dest='daemon', action='store_true', default=False,
                    help='Daemonize the process. This will fork the process into the background.')
parser.add_argument('--logfile', dest='logfile', action='store', default=logging.StreamHandler(sys.stderr),
                    help='Output location for the log file. Default: stderr')
parser.add_argument('--logformat', dest='logformat', action='store',
                    default='[%(asctime)s %(levelname)-8s] %(name)s: %(message)s',
                    help='Change the logging format')
parser.add_argument('--loglevel', dest='loglevel', action='store', default='INFO',
                    choices=('DEBUG', 'INFO', 'WARN', 'ERROR', 'CRITICAL'),
                    help='Set the default logging level')
parser.add_argument('--pidfile', dest='pidfile', action='store', default='/var/run/desk-changer-daemon.pid', metavar='FILE',
                    help='Default location of the pidfile')
parser.add_argument('-v', '--version', action='version', version=desk_changer_version)
parser.add_argument('action', choices=('start', 'stop', 'restart', 'status'),
                    help='Control the DeskChanger daemon process')
args = parser.parse_args()
desk_changer_logger_format = logging.Formatter(args.logformat)
desk_changer_logfile_handler = args.logfile if isinstance(args.logfile, logging.Handler) else logging.FileHandler(args.logfile)
desk_changer_logfile_handler.setFormatter(desk_changer_logger_format)
desk_changer_logger.setLevel(logging._checkLevel(args.loglevel))
desk_changer_logger.addHandler(desk_changer_logfile_handler)
desk_changer_daemon = Daemon(args.pidfile)

if args.action == 'stop':
	desk_changer_daemon.stop()
elif args.action == 'start':
	if args.daemon:
		desk_changer_daemon.daemonize()
	desk_changer_daemon.start()
elif args.action == 'restart':
	if args.daemon:
		desk_changer_daemon.daemonize()
	desk_changer_daemon.restart()
elif args.action == 'status':
	status = desk_changer_daemon.status()
	name = os.path.basename(sys.argv[0])
	if status[0] == 'running':
		print('%s is running with pid %i' % (name, status[1]))
	else:
		print('%s is stopped' % (name, ))

